romInit: equ 000047D6h
printText: equ 0000728Eh
GETWRK: equ 00004DB0h
RDSLT: equ 0000000Ch
CALSLT: equ 0000001Ch
ENASLT: equ 00000024h
CHGMOD: equ 0000005Fh
SNSMAT: equ 00000141h
EXTROM: equ 0000015Fh
SDFSCR: equ 00000185h
LASTDRV: equ 0000F33Fh
RAMAD1: equ 0000F342h
XFER: equ 0000F36Eh
VALTYP: equ 0000F663h
DAC: equ 0000F7F6h
PTRFIL: equ 0000F864h
FILNAM: equ 0000F866h
EXPTBL: equ 0000FCC1h
SLTTBL: equ 0000FCC5h
PROCNM: equ 0000FD89h
DEVICE: equ 0000FD99h
GETSLT: equ 0000402Dh
H.RUNC: equ 0000FECBh
usbwr: equ 00004000h
usbrd: equ 00002000h
usb2: equ 00008000h
mapper: equ 00006000h
C_DSKIO: equ 00000080h
C_DSKCHG: equ 00000081h
C_GETDPB: equ 00000082h
C_CHOICE: equ 00000083h
C_DSKFMT: equ 00000084h
C_DRIVES: equ 00000085h
C_INIENV: equ 00000086h
C_SETDATE: equ 00000087h
C_DEVICEOPEN: equ 00000088h
C_DEVICECLOSE: equ 00000089h
C_DEVICERNDIO: equ 0000008Ah
C_DEVICEWRITE: equ 0000008Bh
C_DEVICEREAD: equ 0000008Ch
C_DEVICEEOF: equ 0000008Dh
C_AUXIN: equ 0000008Eh
C_AUXOUT: equ 0000008Fh
C_CHANGEIMAGE: equ 000000A0h
C_BOOTCODE: equ 000000A1h
nowindInit: equ 000072F0h
initDiskBasic: equ 00007323h
findStatementName: equ 0000733Bh
findStatementName.loop: equ 00007352h
findStatementName.nextStatement: equ 0000735Ch
sendRegisters: equ 00007367h
getHeader: equ 00007379h
getHeader.loop: equ 0000737Bh
getHeader.chkaf: equ 0000737Ch
getHeader.chk05: equ 000073A0h
newAUX: equ 000073A7h
AUXin: equ 000073B1h
AUXout: equ 000073BDh
insertBootCode: equ 000073DBh
sdendFCB: equ 00007402h
sdendFCB.loop: equ 00007406h
receiveFCB: equ 00007410h
receiveFCB.loop: equ 00007414h
enableNowindPage0: equ 00007421h
restorePage0: equ 0000742Ch
enableSlotPage0: equ 00007435h
enableSlotPage0.expanded: equ 00007446h
expanded: equ 00007471h
getSlotPage0: equ 00007482h
getSlotPage0.shft: equ 00007487h
getSlotPage1: equ 0000748Dh
getSlotPage2: equ 00007498h
getSlotPage3: equ 000074A7h
MYSIZE: equ 00000001h
SECLEN: equ 00000200h
INIHRD: equ 000074B2h
INIHRD.loop: equ 000074C1h
DRIVES: equ 000074D5h
DRIVES.exit: equ 00007518h
DRIVES.notconnected: equ 00007521h
INIENV: equ 0000753Eh
INIENV.exit: equ 00007562h
checkWorkArea: equ 00007565h
DSKIO: equ 00007570h
dskioRead: equ 00007587h
dskioRead.page2: equ 0000B5A4h
dskioRead.page1: equ 000075B9h
dskioRead.page2and3: equ 000075C9h
dskioWrite: equ 000075DFh
dskioWrite.page2: equ 0000B5FFh
dskioWrite.page1: equ 00007615h
dskioWrite.page2and3: equ 0000762Bh
dskioWrite.writeLoop23: equ 00007640h
dskioWrite.error: equ 00007670h
DSKCHG: equ 00007673h
GETDPB: equ 000076AAh
CHOICE: equ 000076CBh
CHOICE.noFormat: equ 000076CFh
DSKFMT: equ 000076D0h
readSectors01: equ 0000B6D4h
readSectors01.slowTransfer: equ 0000B6F6h
writeLoop01: equ 0000B702h
writeLoop01.error: equ 0000B724h
readSectors23: equ 00007727h
readSectors23.slowTransfer: equ 0000774Bh
reverseTransfer: equ 00007768h
reverseTransfer.loop: equ 00007774h
OEMSTA: equ 000077DBh
OEMSTA.statement: equ 000077E9h
changeImage: equ 000077FCh
call_exit: equ 00007811h
call_exit.loop: equ 0000781Dh
videoStream: equ 00007829h
vramDump: equ 0000782Ah
evenFrame: equ 00007836h
oddFrame: equ 00007853h
tranferframe: equ 00007873h
write_more: equ 00007880h
changeColors: equ 0000798Dh
setVramAccessPointer: equ 000079DBh
waitForRetrace: equ 000079E9h
waitForRetrace.lp2: equ 000079EFh
printText2: equ 000079FAh
printText2.loop: equ 000079FBh
supportedMedia: equ 00007A04h
supportedMedia.f8: equ 00007A04h
supportedMedia.def: equ 00007A16h
DEFDPB: equ 00007A16h
ROMDISK_DSKIO: equ 00007A94h
ROMDISK_DSKIO.loop: equ 00007AA3h
ROMDISK_DSKIO.directCopy: equ 00007AC5h
ROMDISK_DSKIO.nextSector: equ 00007ACBh
ROMDISK_DSKIO.findSector: equ 00007AD1h
ROMDISK_DSKIO.skip: equ 00007AE6h
ROMDISK_DSKCHG: equ 00007AF3h
ROMDISK_GETDPB: equ 00007AF8h
ROMDISK_DSKFMT: equ 00007AF8h
flashWriter: equ 00007AF8h
flashWriter.source: equ 00007B48h
waitForHeader: equ 0000C000h
waitForHeader.chkbb: equ 0000C003h
chipErase: equ 0000C01Ah
chipErase.wait: equ 0000C027h
writeFlash: equ 0000C031h
writeFlash.loop: equ 0000C040h
writeFlash.wait: equ 0000C04Ah
verifyFlash: equ 0000C056h
verifyFlash.loop: equ 0000C061h
acknowledge: equ 0000C06Ah
updateBar: equ 0000C074h
AM29F040Command: equ 0000C079h
flasherEnd: equ 0000C088h
device: equ 00007BD0h
device.nocy: equ 00007BDCh
deviceFunctions: equ 00007BE2h
identifyDevice: equ 00007BF8h
deviceNameList: equ 00007C11h
open: equ 00007C18h
deviceIoError: equ 00007C3Fh
openError: equ 00007C41h
basicError: equ 00007C45h
close: equ 00007C50h
randomIO: equ 00007C56h
write: equ 00007C5Ah
read: equ 00007C60h
eof: equ 00007C94h
eof.skip: equ 00007CADh
loc: equ 00007CB6h
putback: equ 00007CC8h
lof: equ 00007CC8h
fpos: equ 00007CC8h
illegalFunctionCall: equ 00007CD6h
copyFromBank: equ 00007FF4h
enableBank0: equ 00007FF9h
